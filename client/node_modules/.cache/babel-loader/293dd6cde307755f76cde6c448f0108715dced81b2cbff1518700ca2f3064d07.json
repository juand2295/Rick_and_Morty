{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  // el que se ve en pantalla siempre cuando filtro\n  allCharacters: [] // No muta con los filtros, cuando quito los filtros myFavorites va tomar lo que haya aca\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters, action.payload],\n        allCharacters: [...state.allCharacters, action.payload]\n      };\n    case REMOVE_FAV:\n      const newFavorites = state.allCharacters.filter(character => character.id !== Number(action.payload));\n      return {\n        ...state,\n        myFavorites: newFavorites,\n        allCharacters: newFavorites\n      };\n    case FILTER:\n      const filteredChar = state.allCharacters.filter(character => character.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: filteredChar\n      };\n    case ORDER:\n      const newOrder = state.allCharacters.sort((a, b) => {\n        if (action.payload === 'A') {\n          if (a.id < b.id) {\n            return -1;\n          }\n          if (a.id > b.id) {\n            return 1;\n          }\n        }\n        if (action.payload === 'D') {\n          if (a.id < b.id) {\n            return 1;\n          }\n          if (a.id > b.id) {\n            return -1;\n          }\n        }\n      });\n      return {\n        ...state,\n        myFavorites: newOrder\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharacters","reducer","state","arguments","length","undefined","action","type","payload","newFavorites","filter","character","id","Number","filteredChar","gender","newOrder","sort","a","b"],"sources":["/Users/valeperezvel/Desktop/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\n\nconst initialState = {\n    myFavorites: [], // el que se ve en pantalla siempre cuando filtro\n    allCharacters: [] // No muta con los filtros, cuando quito los filtros myFavorites va tomar lo que haya aca\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_FAV:\n            return {\n                ...state,\n                myFavorites: [...state.allCharacters, action.payload],\n                allCharacters: [...state.allCharacters, action.payload]\n            }\n        case REMOVE_FAV:\n            const newFavorites = state.allCharacters.filter(character => character.id !== Number(action.payload))\n            return {\n                ...state,\n                myFavorites: newFavorites,\n                allCharacters: newFavorites\n            }\n        case FILTER:\n            const filteredChar = state.allCharacters.filter(character => character.gender === action.payload)\n            return {\n                ...state,\n                myFavorites: filteredChar\n            }\n        case ORDER:\n            const newOrder = state.allCharacters.sort((a,b) => {\n                if (action.payload === 'A'){\n                    if (a.id < b.id){\n                      return -1\n                    }\n                    if (a.id > b.id){\n                      return 1\n                    }\n                }\n                if (action.payload === 'D'){\n                    if (a.id < b.id){\n                      return 1\n                    }\n                    if (a.id > b.id){\n                      return -1\n                    }\n                }\n            })\n            return {\n                ...state,\n                myFavorites: newOrder\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,WAAW;AAE9D,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EAAE;EACjBC,aAAa,EAAE,EAAE,CAAC;AACtB,CAAC;;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKb,OAAO;MACR,OAAO;QACH,GAAGQ,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,OAAO,CAAC;QACrDR,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEM,MAAM,CAACE,OAAO;MAC1D,CAAC;IACL,KAAKb,UAAU;MACX,MAAMc,YAAY,GAAGP,KAAK,CAACF,aAAa,CAACU,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKC,MAAM,CAACP,MAAM,CAACE,OAAO,CAAC,CAAC;MACrG,OAAO;QACH,GAAGN,KAAK;QACRH,WAAW,EAAEU,YAAY;QACzBT,aAAa,EAAES;MACnB,CAAC;IACL,KAAKb,MAAM;MACP,MAAMkB,YAAY,GAAGZ,KAAK,CAACF,aAAa,CAACU,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACI,MAAM,KAAKT,MAAM,CAACE,OAAO,CAAC;MACjG,OAAO;QACH,GAAGN,KAAK;QACRH,WAAW,EAAEe;MACjB,CAAC;IACL,KAAKjB,KAAK;MACN,MAAMmB,QAAQ,GAAGd,KAAK,CAACF,aAAa,CAACiB,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;QAC/C,IAAIb,MAAM,CAACE,OAAO,KAAK,GAAG,EAAC;UACvB,IAAIU,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,EAAC;YACd,OAAO,CAAC,CAAC;UACX;UACA,IAAIM,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,EAAC;YACd,OAAO,CAAC;UACV;QACJ;QACA,IAAIN,MAAM,CAACE,OAAO,KAAK,GAAG,EAAC;UACvB,IAAIU,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,EAAC;YACd,OAAO,CAAC;UACV;UACA,IAAIM,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,EAAC;YACd,OAAO,CAAC,CAAC;UACX;QACJ;MACJ,CAAC,CAAC;MACF,OAAO;QACH,GAAGV,KAAK;QACRH,WAAW,EAAEiB;MACjB,CAAC;IACL;MACI,OAAOd,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}