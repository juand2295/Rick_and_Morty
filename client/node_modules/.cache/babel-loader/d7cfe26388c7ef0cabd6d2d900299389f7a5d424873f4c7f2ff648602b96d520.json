{"ast":null,"code":"var _jsxFileName = \"/Users/valeperezvel/Desktop/rick_and_morty/src/components/favorites/Favorites.jsx\";\nimport { connect } from \"react-redux\";\nimport Card from \"../card/Card\";\nimport { removeFav } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Favorites(props) {\n  const {\n    myFavorites\n  } = props;\n  const closeFav = id => {\n    props.onClose(id);\n    props.removeFav(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children:\n    // vamos a mapear por cada personaje una Card (lo que hacemos en vez de poner character como arg es destructuring)\n    myFavorites.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        // Card esta esperando 7 props (asi que las tengo que poner)\n        id: element.id,\n        name: element.name,\n        status: element.status,\n        species: element.species,\n        gender: element.gender,\n        origin: element.origin.name,\n        image: element.image\n        // tambien hay que pasarle onClose, que esa no hace parte del objeto\n        ,\n        onClose: () => closeFav(element.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 23\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this);\n}\n_c = Favorites;\nconst mapStateToProps = state => {\n  return {\n    myFavorites: state.myFavorites\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeFav: id => dispatch(removeFav(id))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["connect","Card","removeFav","jsxDEV","_jsxDEV","Favorites","props","myFavorites","closeFav","id","onClose","children","map","element","index","name","status","species","gender","origin","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["/Users/valeperezvel/Desktop/rick_and_morty/src/components/favorites/Favorites.jsx"],"sourcesContent":["import { connect } from \"react-redux\";\nimport Card from \"../card/Card\";\nimport { removeFav } from \"../../redux/actions\";\n\nfunction Favorites (props) {\n    const {myFavorites} = props\n    \n    const closeFav = (id) => {\n        props.onClose(id)\n        props.removeFav(id)\n    }\n\n    return (\n       <div>\n          {\n            // vamos a mapear por cada personaje una Card (lo que hacemos en vez de poner character como arg es destructuring)\n            myFavorites.map((element, index) => {\n               return <Card key={index}// Card esta esperando 7 props (asi que las tengo que poner)\n               id = {element.id}\n               name = {element.name}\n               status = {element.status}\n               species = {element.species}\n               gender = {element.gender}\n               origin = {element.origin.name}\n               image = {element.image}\n               // tambien hay que pasarle onClose, que esa no hace parte del objeto\n               onClose = {() => closeFav(element.id)}\n               />\n            })\n         }\n       </div>\n    ); \n }\n\n const mapStateToProps = (state) => {\n    return {\n       myFavorites: state.myFavorites\n    }\n }\n\n const mapDispatchToProps = (dispatch) => {\n    return {\n        removeFav: (id) =>  dispatch(removeFav(id))\n    }\n }\n\n export default connect(mapStateToProps, mapDispatchToProps)(Favorites)"],"mappings":";AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,SAASA,CAAEC,KAAK,EAAE;EACvB,MAAM;IAACC;EAAW,CAAC,GAAGD,KAAK;EAE3B,MAAME,QAAQ,GAAIC,EAAE,IAAK;IACrBH,KAAK,CAACI,OAAO,CAACD,EAAE,CAAC;IACjBH,KAAK,CAACJ,SAAS,CAACO,EAAE,CAAC;EACvB,CAAC;EAED,oBACGL,OAAA;IAAAO,QAAA;IAEK;IACAJ,WAAW,CAACK,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MACjC,oBAAOV,OAAA,CAACH,IAAI;QAAY;QACxBQ,EAAE,EAAII,OAAO,CAACJ,EAAG;QACjBM,IAAI,EAAIF,OAAO,CAACE,IAAK;QACrBC,MAAM,EAAIH,OAAO,CAACG,MAAO;QACzBC,OAAO,EAAIJ,OAAO,CAACI,OAAQ;QAC3BC,MAAM,EAAIL,OAAO,CAACK,MAAO;QACzBC,MAAM,EAAIN,OAAO,CAACM,MAAM,CAACJ,IAAK;QAC9BK,KAAK,EAAIP,OAAO,CAACO;QACjB;QAAA;QACAV,OAAO,EAAIA,CAAA,KAAMF,QAAQ,CAACK,OAAO,CAACJ,EAAE;MAAE,GATpBK,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUtB,CAAC;IACL,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEZ;AAACC,EAAA,GA5BOpB,SAAS;AA8BjB,MAAMqB,eAAe,GAAIC,KAAK,IAAK;EAChC,OAAO;IACJpB,WAAW,EAAEoB,KAAK,CAACpB;EACtB,CAAC;AACJ,CAAC;AAED,MAAMqB,kBAAkB,GAAIC,QAAQ,IAAK;EACtC,OAAO;IACH3B,SAAS,EAAGO,EAAE,IAAMoB,QAAQ,CAAC3B,SAAS,CAACO,EAAE,CAAC;EAC9C,CAAC;AACJ,CAAC;AAED,eAAeT,OAAO,CAAC0B,eAAe,EAAEE,kBAAkB,CAAC,CAACvB,SAAS,CAAC;AAAA,IAAAoB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}